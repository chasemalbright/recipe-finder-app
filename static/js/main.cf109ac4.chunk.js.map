{"version":3,"sources":["Recipe.js","App.js","reportWebVitals.js","index.js","recipe.module.css"],"names":["Recipe","title","calories","image","ingredients","className","style","recipe","center","map","ingredient","text","Math","round","src","alt","App","useState","recipes","setRecipes","search","setSearch","query","setQuery","useEffect","getRecipes","a","fetch","response","json","data","hits","onSubmit","e","preventDefault","type","placeholder","value","onChange","target","label","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"iQAoBeA,EAjBA,SAAC,GAA2C,IAA1CC,EAAyC,EAAzCA,MAAOC,EAAkC,EAAlCA,SAAUC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,YACrC,OACI,sBAAKC,UAAWC,IAAMC,OAAtB,UACI,oBAAIF,UAAWC,IAAML,MAArB,SAA6BA,IAE7B,oBAAII,UAAWC,IAAME,OAArB,SACKJ,EAAYK,KAAI,SAAAC,GAAU,OACvB,6BAAKA,EAAWC,YAIxB,oBAAGN,UAAWC,IAAML,MAApB,wBAAuCW,KAAKC,MAAMX,MAClD,qBAAKG,UAAWC,IAAMH,MAAOW,IAAKX,EAAOY,IAAI,S,MCuC1CC,MAlDf,WAEE,IAFa,EAKiBC,mBAAS,IAL1B,mBAKNC,EALM,KAKGC,EALH,OAMeF,mBAAS,IANxB,mBAMNG,EANM,KAMEC,EANF,OAOaJ,mBAAS,WAPtB,mBAONK,EAPM,KAOCC,EAPD,KASbC,qBAAU,WACRC,MACC,CAACH,IAEJ,IAAMG,EAAU,uCAAG,8BAAAC,EAAA,sEACMC,MAAM,mCAAD,OAAoCL,EAApC,mBAZf,WAYe,oBAXd,qCAUG,cACXM,EADW,gBAEEA,EAASC,OAFX,OAEXC,EAFW,OAGjBX,EAAWW,EAAKC,MAHC,2CAAH,qDAgBhB,OACE,sBAAK1B,UAAU,MAAf,UACE,uBAAO2B,SAZO,SAAAC,GAChBA,EAAEC,iBACFX,EAASH,GACTC,EAAU,KASoBhB,UAAU,cAAtC,UACE,uBAAOA,UAAU,aAAa8B,KAAK,OAAOC,YAAY,kBAAkBC,MAAOjB,EAC/EkB,SARe,SAAAL,GACnBZ,EAAUY,EAAEM,OAAOF,UAWf,wBAAQhC,UAAU,gBAAgB8B,KAAK,SAAvC,uBAEF,sBAAK9B,UAAU,UAAf,UACCa,EAAQT,KAAI,SAAAF,GAAM,OACjB,cAAC,EAAD,CAAQN,MAAOM,EAAOA,OAAOiC,MAAOtC,SAAUK,EAAOA,OAAOL,SAC5DC,MAAOI,EAAOA,OAAOJ,MAAiCC,YAAaG,EAAOA,OAAOH,aAAhDG,EAAOA,OAAOiC,UAHjD,WC/BSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfAc,EAAOC,QAAU,CAAC,OAAS,uBAAuB,MAAQ,sBAAsB,MAAQ,sBAAsB,OAAS,0B","file":"static/js/main.cf109ac4.chunk.js","sourcesContent":["import React from 'react';\r\nimport style from './recipe.module.css'\r\n\r\nconst Recipe = ({title, calories, image, ingredients}) => {\r\n    return(\r\n        <div className={style.recipe}>\r\n            <h1 className={style.title}>{title}</h1>\r\n\r\n            <ol className={style.center}>\r\n                {ingredients.map(ingredient =>(\r\n                    <li>{ingredient.text}</li>\r\n                ))}\r\n            </ol>\r\n\r\n            <p className={style.title}>Calories:  {Math.round(calories)}</p>\r\n            <img className={style.image} src={image} alt=\"\"/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Recipe;","import React, {useEffect, useState} from \"react\";\nimport Recipe from './Recipe.js';\nimport './App.css';\n\nfunction App() {\n\n  const APP_ID = '7762e2bc';\n  const APP_KEY = '0dc48968ed28c8bc6bbe0014a7bdc4e4';\n\n  const [recipes, setRecipes] = useState([]);\n  const [search, setSearch] = useState('');\n  const [query, setQuery] = useState('chicken');\n\n  useEffect(() => {\n    getRecipes();\n  }, [query]);\n\n  const getRecipes = async () => {\n    const response = await fetch(`https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`);\n    const data = await response.json();\n    setRecipes(data.hits);\n  }\n\n  const getSearch = e => {\n    e.preventDefault();\n    setQuery(search)\n    setSearch('')\n  }\n\n  const updateSearch = e => {\n    setSearch(e.target.value);\n  }\n\n  return (\n    <div className=\"App\">\n      <form  onSubmit={getSearch} className=\"search-form\">\n        <input className=\"search-bar\" type=\"text\" placeholder=\"Enter Food Name\" value={search}\n        onChange={updateSearch}\n        >\n\n        </input>\n        <button className=\"search-button\" type=\"submit\">search</button>\n      </form>\n      <div className='recipes'>\n      {recipes.map(recipe =>(\n        <Recipe title={recipe.recipe.label} calories={recipe.recipe.calories}\n        image={recipe.recipe.image} key={recipe.recipe.label} ingredients={recipe.recipe.ingredients}\n        />\n      ))};\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"recipe\":\"recipe_recipe__RZO8E\",\"image\":\"recipe_image__1keAq\",\"title\":\"recipe_title__20KHe\",\"center\":\"recipe_center__1TxcJ\"};"],"sourceRoot":""}